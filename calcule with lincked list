


type Node struct {
	Num  int
	Opr  string
	Next *Node
}

func calcule(s string) int {
	a := &Node{}
	b := a
	for i := 0; i < len(s); i++ {
		if i == 0 {
			b.Num = int(s[i] - 48)
		} else {
			if s[i] >= '0' && s[i] <= '9' {
				b.Next = &Node{Num: int(s[i] - 48)}
				b = b.Next
			} else {

				b.Next = &Node{Opr: string(s[i])}
				b = b.Next
			}
		}
	}

	b = a
	for b.Next != nil {
		if b.Next.Opr == "*" {
			b.Num = b.Num * b.Next.Next.Num
			b.Next = b.Next.Next.Next
			if b==nil{
				break
			}
		} else {
			b = b.Next
		}
	}
	b = a
	for b.Next != nil {
		if b.Next.Opr == "+" {
			b.Num = b.Num + b.Next.Next.Num
			b.Next = b.Next.Next.Next
			if b==nil{
				break
			}
		} else {
			b = b.Next
		}
	}
	return a.Num
}
